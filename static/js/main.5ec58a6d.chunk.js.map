{"version":3,"sources":["assets/bass_drum.mp3","assets/snare.mp3","assets/drumsticks_hit.mp3","assets/hi_hat_closed.mp3","assets/hi_hat_open.mp3","assets/hi_hat_foot_pedal.mp3","assets/floor_tom_drum.mp3","assets/shh.mp3","assets/snap.mp3","App.js","serviceWorker.js","index.js"],"names":["module","exports","drumSounds","key","keyCode","link","bassDrum","descr","snare","drumsticksHit","hiHatClosed","hiHatOpen","hiHatFootPedal","floorTomDrum","shh","snap","App","props","state","lastPlayed","playSound","bind","x","currentTime","play","this","setState","parentElement","id","soundIndex","React","Component","Button","handleClick","handleKeypress","document","addEventListener","removeEventListener","e","var1","target","children","indexVar","findIndex","elemVar","getElementById","keyName","soundName","class","onClick","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5ec58a6d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bass_drum.72fce59e.mp3\";","module.exports = __webpack_public_path__ + \"static/media/snare.13c532d2.mp3\";","module.exports = __webpack_public_path__ + \"static/media/drumsticks_hit.39935787.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hi_hat_closed.bd54e70f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hi_hat_open.2caa8c9b.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hi_hat_foot_pedal.36c0c54f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/floor_tom_drum.febd56ee.mp3\";","module.exports = __webpack_public_path__ + \"static/media/shh.dd1c84c1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/snap.7f645ec2.mp3\";","import React from 'react';\nimport './App.css';\nimport bassDrum from \"./assets/bass_drum.mp3\";\nimport snare from \"./assets/snare.mp3\";\nimport drumsticksHit from \"./assets/drumsticks_hit.mp3\";\nimport hiHatClosed from \"./assets/hi_hat_closed.mp3\";\nimport hiHatOpen from \"./assets/hi_hat_open.mp3\";\nimport hiHatFootPedal from \"./assets/hi_hat_foot_pedal.mp3\";\nimport floorTomDrum from \"./assets/floor_tom_drum.mp3\";\nimport shh from \"./assets/shh.mp3\";\nimport snap from \"./assets/snap.mp3\";\n\nconst drumSounds = [\n  {\n    key: \"Q\",\n    keyCode: 81,\n    link: bassDrum,\n    descr: \"bass drum\"\n  },\n  {\n    key: \"W\",\n    keyCode: 87,\n    link: snare,\n    descr: \"snare\"\n  },\n  {\n    key: \"E\",\n    keyCode: 69,\n    link: drumsticksHit,\n    descr: \"drumsticks hit\"\n  },\n  {\n    key: \"A\",\n    keyCode: 65,\n    link: hiHatClosed,\n    descr: \"hi-hat-closed\"\n  },\n  {\n    key: \"S\",\n    keyCode: 83,\n    link: hiHatOpen,\n    descr: \"hi-hat-open\"\n  },\n  {\n    key: \"D\",\n    keyCode: 68,\n    link: hiHatFootPedal,\n    descr: \"hi-hat foot pedal\"\n  },\n  {\n    key: \"Z\",\n    keyCode: 90,\n    link: floorTomDrum,\n    descr: \"floor tom drum\"\n  },\n  {\n    key: \"X\",\n    keyCode: 88,\n    link: shh,\n    descr: \"shh\"\n  },\n  {\n    key: \"C\",\n    keyCode: 67,\n    link: snap,\n    descr: \"snap\"\n  }\n];\n\nclass App extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      lastPlayed: null\n    }\n    this.playSound = this.playSound.bind(this);\n  }\n  \n  playSound(x) {\n    x.currentTime = 0;\n    x.play();\n    this.setState ({\n      lastPlayed: x.parentElement.id\n    })\n  }\n  \n  \n  render() {\n    return (\n      <div id=\"drum-machine\">\n        <div id=\"display\">\n          Last hit: <br />\n          {this.state.lastPlayed}\n        </div>\n        <div id=\"button-area\">\n          <Button soundIndex=\"0\" playSound={this.playSound} />\n          <Button soundIndex=\"1\" playSound={this.playSound} />\n          <Button soundIndex=\"2\" playSound={this.playSound} />\n          <Button soundIndex=\"3\" playSound={this.playSound} />\n          <Button soundIndex=\"4\" playSound={this.playSound} />\n          <Button soundIndex=\"5\" playSound={this.playSound} />\n          <Button soundIndex=\"6\" playSound={this.playSound} />\n          <Button soundIndex=\"7\" playSound={this.playSound} />\n          <Button soundIndex=\"8\" playSound={this.playSound} />\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleKeypress = this.handleKeypress.bind(this);\n  }\n  \n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeypress);\n  }\n  \n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeypress);\n  }\n  \n  handleClick(e) {\n    let var1 = e.target.children[2];\n    this.props.playSound(var1);\n  }\n  \n  handleKeypress(e) {\n   let indexVar = drumSounds.findIndex(x => x.keyCode === e.keyCode)\n   if (indexVar !== -1) {\n     let elemVar = document.getElementById(drumSounds[indexVar].key)\n     this.props.playSound(elemVar);\n   }\n  }\n  \n  render() {\n    const soundIndex = this.props.soundIndex;\n    const keyName = drumSounds[soundIndex].key;\n    const soundName = drumSounds[soundIndex].descr;\n    return (<button \n          id={soundName}\n          class=\"drum-pad btn\"\n          onClick={this.handleClick}\n          >\n          {keyName}\n          <br />\n          <p>{soundName}</p>\n          <audio\n            id={keyName}\n            class=\"clip\"\n            src={drumSounds[soundIndex].link}\n            >\n          </audio>\n        </button>)\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}